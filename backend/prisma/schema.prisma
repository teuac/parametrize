generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  role       Role     @default(user)
  active     Boolean  @default(true)
  cpfCnpj    String? 
  adesao     DateTime @default(now())
  telefone   String?
  activeUpdatedAt DateTime?
  dailySearchLimit Int    @default(100)
  searches   SearchLog[]
  supportTickets SupportTicket[]
  createdAt  DateTime @default(now())
}

model SearchLog {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  query     String?
  createdAt DateTime @default(now())
}

model SupportTicket {
  id         Int      @id @default(autoincrement())
  protocol   String?  @unique
  email      String
  message    String
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
  status     String   @default("open")
  response   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Ncm {
  id          Int         @id @default(autoincrement())
  codigo      String
  descricao   String
  cClasstrib  Int

  classTrib   ClassTrib   @relation(fields: [cClasstrib], references: [codigoClassTrib], onDelete: SetNull)

  @@unique([codigo, cClasstrib]) // ðŸ‘ˆ chave composta Ãºnica
}

model ClassTrib {
  id                       Int      @id @default(autoincrement())
  codigoClassTrib          Int      @unique // corresponde ao cClasstrib da aba NCM
  cstIbsCbs                String?
  descricaoCstIbsCbs       String?
  descricaoClassTrib       String?
  lcRedacao                String?
  lc214_25                 String?
  pRedIBS                  Decimal? @db.Decimal(5,2)
  pRedCBS                  Decimal? @db.Decimal(5,2)
  link                     String?

  ncm                      Ncm[]
}

